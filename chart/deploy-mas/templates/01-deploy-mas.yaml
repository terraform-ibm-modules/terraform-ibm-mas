{{ $ns              :=  printf "mas-%s-pipelines" .Values.mas_instance_id }}
{{ $role_name       :=  "mas-deploy-role" }}
{{ $secret_name     :=  "mas-deploy-secret" }}
{{ $crole_name      :=  "mas-deploy-crole" }}
{{ $sa_name         :=  "mas-deploy-sa" }}
{{ $scc_name        :=  "mas-deploy-scc" }}
{{ $rb_name         :=  "mas-deploy-rb" }}
{{ $crb_name        :=  "mas-deploy-crb" }}
{{ $job_name        :=  "mas-deploy-job" }}
{{ $readonly_root_filesystem        :=  printf "%s" .Values.readonly_root_filesystem }}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $ns }}

---
kind: Secret
apiVersion: v1
metadata:
  name: {{ $secret_name }}
  namespace: {{ $ns }}
data:
  entitlement_key: {{ .Values.entitlement_key }}
  authorized_entitlement: {{ .Values.mas_license }}
type: Opaque

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $sa_name }}
  namespace: {{ $ns }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ $crb_name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: {{ $sa_name }}
  namespace: {{ $ns }}


---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $job_name }}
  generateName: "{{ $job_name }}-"
  namespace: {{ $ns }}
  annotations:

    checkov.io/skip3: CKV_K8S_40
    checkov.io/skip4: CKV_K8S_35
    checkov.io/skip6: CKV_K8S_38
    checkov.io/skip16: CKV_K8S_22

spec:
  ttlSecondsAfterFinished: 120
  template:
    metadata:
      labels:
        app: {{ $job_name }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ $sa_name }}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
      containers:
        - name: {{ $job_name }}
          # 8.0.0-pre.master - sha256:5b5222caecdd860840fd1eb070999e29ed356310474741f76934d0a9f8921d99
          # below sha is for quay.io/ibmmas/cli:8.0.0-pre.mascore-2054 (tag 8.0.0), update it once we get a new release tag
          image: quay.io/ibmmas/cli@sha256:63cc89547409eb4e85c56383bc5281557ede0e5a63748789b5548ce8b9ed79b6
          imagePullPolicy: Always
          securityContext:
            readOnlyRootFilesystem: {{ $readonly_root_filesystem }}
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop: ["ALL"]
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          command:
            - /bin/sh
            - -c
            - |

              set -e

              export ENTITLEMENT_KEY=$(cat /etc/mas/deploy/secrets/entitlement_key)
              export AUTHORIZED_ENTITLEMENT=$(cat /etc/mas/deploy/secrets/authorized_entitlement)
              ##echo "ENTITLEMENT_KEY=${ENTITLEMENT_KEY}"
              ##echo "AUTHORIZED_ENTITLEMENT=${AUTHORIZED_ENTITLEMENT}"
              SLS_LICENSE_FILE_LOCAL=/etc/mas/deploy/secrets/authorized_entitlement
              ##echo "------authorized_entitlement.lic--------------"
              ##cat $SLS_LICENSE_FILE_LOCAL
              ##echo "------authorized_entitlement.lic--------------"

              echo "MAS_INSTANCE_ID=${MAS_INSTANCE_ID}"
              echo "MAS_WORKSPACE_ID${MAS_WORKSPACE_ID}"
              echo "MAS_WORKSPACE_NAME=${MAS_WORKSPACE_NAME}"
              echo "MAS_CATALOG_VERSION=${MAS_CATALOG_VERSION}"
              echo "MAS_CHANNEL=${MAS_CHANNEL}"
              echo "SLS_LICENSE_ID=${SLS_LICENSE_ID}"
              ##echo "SLS_LICENSE_FILE_LOCAL=${SLS_LICENSE_FILE_LOCAL}"
              echo "CONTACT_EMAIL=${CONTACT_EMAIL}"
              echo "CONTACT_FIRSTNAME=${CONTACT_FIRSTNAME}"
              echo "CONTACT_LASTNAME=${CONTACT_LASTNAME}"
              echo "STORAGE_CLASS_RWX=${STORAGE_CLASS_RWX}"
              echo "PIPELINE_STORAGE_CLASS=${PIPELINE_STORAGE_CLASS}"
              echo "PIPELINE_STORAGE_ACCESSMODE=${PIPELINE_STORAGE_ACCESSMODE}"
              echo "MANAGE_CHANNEL=${MANAGE_CHANNEL}"
              echo "MANAGE_JDBC_CONFIG_SCOPE=${MANAGE_JDBC_CONFIG_SCOPE}"
              echo "MANAGE_COMPONENTS=${MANAGE_COMPONENTS}"
              echo "DB2U_CHANNEL=${DB2U_CHANNEL}"
              echo "DB2U_CPU_REQUEST=${DB2U_CPU_REQUEST}"
              echo "DB2U_CPU_LIMIT=${DB2U_CPU_LIMIT}"
              echo "DB2U_MEMORY_REQUEST=${DB2U_MEMORY_REQUEST}"
              echo "DB2U_MEMORY_LIMIT=${DB2U_MEMORY_LIMIT}"
              echo "DB2U_BACKUP_STORAGE=${DB2U_BACKUP_STORAGE}"
              echo "DB2U_DATA_STORAGE=${DB2U_DATA_STORAGE}"
              echo "DB2U_LOGS_STORAGE=${DB2U_LOGS_STORAGE}"
              echo "DB2U_META_STORAGE=${DB2U_META_STORAGE}"
              echo "DB2U_TEMP_STORAGE=${DB2U_TEMP_STORAGE}"

              echo "DEPLOYMENT_FLAVOR=${DEPLOYMENT_FLAVOR}"
              DEPLOYMENT_FLAVOR=${DEPLOYMENT_FLAVOR:-"core"}

              if [ "${DEPLOYMENT_FLAVOR}" == "core" ]; then
                echo "Core installation started"

                mas install -i "${MAS_INSTANCE_ID}" -w "${MAS_WORKSPACE_ID}" \
                  -W "${MAS_WORKSPACE_NAME}" -c "${MAS_CATALOG_VERSION}" \
                  --mas-channel "${MAS_CHANNEL}" --ibm-entitlement-key "${ENTITLEMENT_KEY}" \
                  --license-id "${SLS_LICENSE_ID}" --license-file "${SLS_LICENSE_FILE_LOCAL}" \
                  --uds-email "${CONTACT_EMAIL}" --uds-firstname "${CONTACT_FIRSTNAME}" \
                  --uds-lastname "${CONTACT_LASTNAME}" --storage-rwx "${STORAGE_CLASS_RWX}" \
                  --storage-pipeline "${PIPELINE_STORAGE_CLASS}" --storage-accessmode "${PIPELINE_STORAGE_ACCESSMODE}" \
                  --no-confirm --no-wait-for-pvcs --accept-license

              elif [ "${DEPLOYMENT_FLAVOR}" == "manage" ]; then
                echo "Core+Manage installation started"

                mas install -i "${MAS_INSTANCE_ID}" -w "${MAS_WORKSPACE_ID}" \
                  -W "${MAS_WORKSPACE_NAME}" -c "${MAS_CATALOG_VERSION}" \
                  --mas-channel "${MAS_CHANNEL}" --ibm-entitlement-key ${ENTITLEMENT_KEY} \
                  --license-id "${SLS_LICENSE_ID}" --license-file "${SLS_LICENSE_FILE_LOCAL}" \
                  --uds-email "${CONTACT_EMAIL}" --uds-firstname "${CONTACT_FIRSTNAME}" \
                  --uds-lastname "${CONTACT_LASTNAME}" --storage-rwx "${STORAGE_CLASS_RWX}" --storage-rwo "${STORAGE_CLASS_RWO}" \
                  --storage-pipeline "${PIPELINE_STORAGE_CLASS}" --storage-accessmode "${PIPELINE_STORAGE_ACCESSMODE}" \
                  --manage-channel "${MANAGE_CHANNEL}" \
                  --manage-jdbc "${MANAGE_JDBC_CONFIG_SCOPE}" --manage-components "${MANAGE_COMPONENTS}" \
                  --db2u-channel "${DB2U_CHANNEL}" --db2u-manage \
                  --db2u-cpu-request "${DB2U_CPU_REQUEST}" --db2u-cpu-limit "${DB2U_CPU_LIMIT}" \
                  --db2u-memory-request "${DB2U_MEMORY_REQUEST}" --db2u-memory-limit "${DB2U_MEMORY_LIMIT}" \
                  --db2u-backup-storage "${DB2U_BACKUP_STORAGE}" --db2u-data-storage "${DB2U_DATA_STORAGE}" \
                  --db2u-logs-storage "${DB2U_LOGS_STORAGE}" --db2u-meta-storage "${DB2U_META_STORAGE}" \
                  --db2u-temp-storage "${DB2U_TEMP_STORAGE}" \
                  --no-confirm --no-wait-for-pvcs --accept-license

              else
                echo "Passed DEPLOYMENT_FLAVOR not supported, Supported values = core, mange"
                exit 1
              fi

          env:
            - name: MAS_INSTANCE_ID
              value: "{{ .Values.mas_instance_id }}"

            - name: MAS_WORKSPACE_ID
              value: "{{ .Values.mas_workspace_id }}"
            - name: MAS_WORKSPACE_NAME
              value: "{{ .Values.mas_workspace_name }}"
            - name: MAS_CATALOG_VERSION
              value: "{{ .Values.mas_catalog_version }}"
            - name: MAS_CHANNEL
              value: "{{ .Values.mas_channel }}"

            - name: SLS_LICENSE_ID
              value: "{{ .Values.sls_license_id }}"
            - name: CONTACT_EMAIL
              value: "{{ .Values.contact_email }}"
            - name: CONTACT_FIRSTNAME
              value: "{{ .Values.contact_firstname }}"
            - name: CONTACT_LASTNAME
              value: "{{ .Values.contact_lastname }}"
            - name: STORAGE_CLASS_RWO
              value: "{{ .Values.storage_class_rwo }}"
            - name: STORAGE_CLASS_RWX
              value: "{{ .Values.storage_class_rwx }}"
            - name: PIPELINE_STORAGE_CLASS
              value: "{{ .Values.pipeline_storage_class }}"
            - name: PIPELINE_STORAGE_ACCESSMODE
              value: "{{ .Values.pipeline_storage_accessmode }}"

            # Manage specific
            - name: MANAGE_CHANNEL
              value: "{{ .Values.manage_channel }}"
            - name: MANAGE_JDBC_CONFIG_SCOPE
              value: "{{ .Values.manage_jdbc_config_scope }}"
            - name: MANAGE_COMPONENTS
              value: "{{ .Values.manage_components }}"
            - name: DB2U_CHANNEL
              value: "{{ .Values.db2u_channel }}"
            - name: DB2U_CPU_REQUEST
              value: "{{ .Values.db2u_cpu_request }}"
            - name: DB2U_CPU_LIMIT
              value: "{{ .Values.db2u_cpu_limit }}"
            - name: DB2U_MEMORY_REQUEST
              value: "{{ .Values.db2u_memory_request }}"
            - name: DB2U_MEMORY_LIMIT
              value: "{{ .Values.db2u_memory_limit }}"
            - name: DB2U_BACKUP_STORAGE
              value: "{{ .Values.db2u_backup_storage }}"
            - name: DB2U_DATA_STORAGE
              value: "{{ .Values.db2u_data_storage }}"
            - name: DB2U_LOGS_STORAGE
              value: "{{ .Values.db2u_logs_storage }}"
            - name: DB2U_META_STORAGE
              value: "{{ .Values.db2u_meta_storage }}"
            - name: DB2U_TEMP_STORAGE
              value: "{{ .Values.db2u_temp_storage }}"
            - name: DEPLOYMENT_FLAVOR
              value: "{{ .Values.deployment_flavor }}"

            - name: ENTITLEMENT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ $secret_name }}
                  key: entitlement_key

            - name: AUTHORIZED_ENTITLEMENT
              valueFrom:
                secretKeyRef:
                  name: {{ $secret_name }}
                  key: authorized_entitlement

          volumeMounts:
            - name: {{ $secret_name }}
              readOnly: true
              mountPath: /etc/mas/deploy/secrets
            #- mountPath: /opt/app-root/src
            #  name: app-root-volume

      volumes:
        - name: {{ $secret_name }}
          secret:
            secretName: {{ $secret_name }}
            defaultMode: 420
            optional: false
        #- name: app-root-volume
        #  emptyDir: {}

  backoffLimit: 6
